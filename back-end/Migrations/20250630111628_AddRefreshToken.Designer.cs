// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartMeetingRoomApi.Data;

#nullable disable

namespace SmartMeetingRoomApi.Migrations
{
    [DbContext(typeof(SmartMeetingRoomApiDbContext))]
    [Migration("20250630111628_AddRefreshToken")]
    partial class AddRefreshToken
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartMeetingRoomApi.Models.MeetingAttendee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ScheduledMeetingId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduledMeetingId");

                    b.HasIndex("UserId");

                    b.ToTable("MeetingAttendees");
                });

            modelBuilder.Entity("SmartMeetingRoomApi.Models.MoM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScheduledMeetingId")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduledMeetingId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("MoMs");
                });

            modelBuilder.Entity("SmartMeetingRoomApi.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScheduledMeetingId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduledMeetingId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("SmartMeetingRoomApi.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("SmartMeetingRoomApi.Models.ScheduledMeeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("ScheduledMeetings");
                });

            modelBuilder.Entity("SmartMeetingRoomApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmartMeetingRoomApi.Models.MeetingAttendee", b =>
                {
                    b.HasOne("SmartMeetingRoomApi.Models.ScheduledMeeting", "ScheduledMeeting")
                        .WithMany("MeetingAttendees")
                        .HasForeignKey("ScheduledMeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartMeetingRoomApi.Models.User", "Users")
                        .WithMany("MeetingAttendees")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScheduledMeeting");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SmartMeetingRoomApi.Models.MoM", b =>
                {
                    b.HasOne("SmartMeetingRoomApi.Models.ScheduledMeeting", "ScheduledMeeting")
                        .WithOne("MoMs")
                        .HasForeignKey("SmartMeetingRoomApi.Models.MoM", "ScheduledMeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartMeetingRoomApi.Models.User", "User")
                        .WithMany("MoMs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScheduledMeeting");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartMeetingRoomApi.Models.Notification", b =>
                {
                    b.HasOne("SmartMeetingRoomApi.Models.ScheduledMeeting", "ScheduledMeeting")
                        .WithMany("Notifications")
                        .HasForeignKey("ScheduledMeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartMeetingRoomApi.Models.User", "Users")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScheduledMeeting");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SmartMeetingRoomApi.Models.ScheduledMeeting", b =>
                {
                    b.HasOne("SmartMeetingRoomApi.Models.Room", "Room")
                        .WithMany("ScheduledMeetings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartMeetingRoomApi.Models.User", "User")
                        .WithMany("ScheduledMeetings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartMeetingRoomApi.Models.Room", b =>
                {
                    b.Navigation("ScheduledMeetings");
                });

            modelBuilder.Entity("SmartMeetingRoomApi.Models.ScheduledMeeting", b =>
                {
                    b.Navigation("MeetingAttendees");

                    b.Navigation("MoMs");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("SmartMeetingRoomApi.Models.User", b =>
                {
                    b.Navigation("MeetingAttendees");

                    b.Navigation("MoMs");

                    b.Navigation("Notifications");

                    b.Navigation("ScheduledMeetings");
                });
#pragma warning restore 612, 618
        }
    }
}
